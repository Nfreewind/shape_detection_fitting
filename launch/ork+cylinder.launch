<?xml version="1.0"?>
<launch>
  	<arg name="cloud_in" default="cylinders_pcl"/>
  	<arg name="clusters_in" default="/tabletop/clusters"/>
  	<arg name="rviz_file" default="cylinders.rviz"/>

	<!-- RDBD camera -->
	<include file="$(find openni2_launch)/launch/openni2.launch">
		<arg name="depth_registration" value="true"/>
	</include> 

	<!-- Run a VoxelGrid filter to clean NaNs and downsample the data -->
	<node pkg="nodelet" type="nodelet" name="pcl_manager" args="manager" output="screen" />
	<node pkg="nodelet" type="nodelet" name="voxel_grid" args="load pcl/VoxelGrid pcl_manager" output="screen">
		<remap from="~input" to="/camera/depth/points" />
<rosparam>
filter_field_name: z
filter_limit_min: 0.01
filter_limit_max: 1.5
filter_limit_negative: False
leaf_size: 0.05
</rosparam>
	</node>



  	<!-- ORK Tabletop segmentation -->
  	<node pkg="object_recognition_core" type="detection" name="object_detector" args="-c $(find active_semantic_mapping)/config/detection.table.ros.ork" respawn="true"/>

	<!-- Cylinder segmentation -->
	<include file="$(find active_semantic_mapping)/launch/cylinder_segmentation.launch">
  		<arg name="cloud_in" value="$(arg cloud_in)"/>
  		<arg name="clusters_in" value="$(arg clusters_in)"/>
	</include>  

	<!-- Visualization -->
	<node pkg="rviz" type="rviz" name="rviz" args="-d $(find active_semantic_mapping)/rviz/$(arg rviz_file)"/>
</launch>
